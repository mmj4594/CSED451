#version 460

layout(location = 0) in vec3 aPos;
layout(location = 1) in vec3 aColor;
layout(location = 2) in vec3 aNormal;

out vec3 fN;
out vec3 fE;
out vec3 fL_point;
out vec3 fL_directional;
out vec4 vertexColor;

layout(location = 8) uniform mat4 modelView;
layout(location = 9) uniform mat4 projection;
layout(location = 10) uniform vec4 lightPosition_point;
layout(location = 11) uniform vec4 lightPosition_directional;

void main() {
	gl_Position = projection * modelView * vec4(aPos, 1.0);

	fN = aNormal;
	fE = aPos;
	fL_point = lightPosition_point.xyz;
	if(lightPosition_point.w != 0.0) {
		fL_point = lightPosition_point.xyz - aPos;
	}
	fL_directional = lightPosition_directional.xyz;
	if(lightPosition_directional.w != 0.0) {
		fL_directional = lightPosition_directional.xyz - aPos;
	}
	vertexColor = vec4(aColor, 1.0);
}